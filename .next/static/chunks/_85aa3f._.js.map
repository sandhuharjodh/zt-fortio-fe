{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"./Redux\";\nimport { LoginAsync } from \"./Redux/userSlice\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useRouter } from \"next/navigation\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const router = useRouter();\n\n  const dispatch = useAppDispatch();\n  const { isLoading, error } = useAppSelector((state: RootState) => state.user);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Fetch geolocation\n    const getGeolocation = (): Promise<{ lat: number; long: number }> => {\n      return new Promise((resolve, reject) => {\n        if (!navigator.geolocation) {\n          reject(new Error(\"Geolocation is not supported by your browser.\"));\n        } else {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const { latitude, longitude } = position.coords;\n              resolve({ lat: latitude, long: longitude });\n            },\n            (error) => reject(error),\n            { enableHighAccuracy: true }\n          );\n        }\n      });\n    };\n\n    try {\n      const { lat, long } = await getGeolocation();\n\n      const data: any = await dispatch(\n        LoginAsync({\n          email,\n          password,\n          lat,\n          long,\n        })\n      );\n\n      if (data?.payload?.message === \"Login successful.\") {\n        toast.success(data?.payload?.message);\n\n        const { token, userId } = data.payload;\n\n        if (rememberMe) {\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userId\", userId);\n        } else {\n          sessionStorage.setItem(\"token\", token);\n          sessionStorage.setItem(\"userId\", userId);\n        }\n\n        router.push(\"/dashboard\");\n      } else {\n        toast.error(data?.payload?.message);\n      }\n    } catch (error) {\n      console.error(error, \"Error occurred during geolocation or login.\");\n      toast.error(\"Unable to retrieve your location. Please try again.\");\n    }\n  };\n\n  if (error) {\n    toast.error(error);\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-6 bg-gray-100\">\n      <div className=\"w-full max-w-4xl bg-white rounded-lg shadow-lg flex overflow-hidden\">\n        {/* Left Side: Image with Overlay Text */}\n        <div className=\"w-1/2 hidden md:flex items-center justify-center relative bg-blue-700\">\n          <img\n            src=\"/your-image.png\"\n            alt=\"ZT Fortio\"\n            className=\"absolute top-0 left-0 w-full h-full object-cover opacity-80\"\n          />\n          <div className=\"relative z-10 text-white text-center px-6\">\n            <h2 className=\"text-3xl font-bold\">ZT Fortio</h2>\n            <p className=\"mt-2 text-lg\">Challenges & Solutions</p>\n          </div>\n        </div>\n\n        {/* Right Side: Login Form */}\n        <div className=\"w-full md:w-1/2 p-8\">\n          <h1 className=\"text-xl font-semibold text-gray-700 text-center mb-6\">\n            Login to your Account\n          </h1>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Email Field */}\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                Email\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute inset-y-0 left-3 flex items-center text-gray-500\">\n                  ðŸ“§\n                </span>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setEmail(e.target.value)\n                  }\n                  className=\"w-full pl-10 border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium mb-2\"\n              >\n                Password\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute inset-y-0 left-3 flex items-center text-gray-500\">\n                  ðŸ”’\n                </span>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setPassword(e.target.value)\n                  }\n                  className=\"w-full pl-10 border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            {/* Forgot Password */}\n            <div className=\"flex justify-end\">\n              <a href=\"#\" className=\"text-sm text-blue-600 hover:underline\">\n                Forgot Password?\n              </a>\n            </div>\n\n            {/* Sign In Button */}\n            <Button\n              type=\"submit\"\n              className=\"w-full bg-gradient-to-r from-blue-600 to-blue-800 text-white font-semibold p-2 rounded-md hover:opacity-90 transition\"\n              disabled={isLoading}\n            >\n              {isLoading ? \"Signing In...\" : \"Sign In\"}\n            </Button>\n          </form>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}