{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/rahul/Documents/lib/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/rahul/Documents/lib/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/rahul/Documents/lib/app/components/LoginEventModal.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { RootState, useAppDispatch, useAppSelector } from \"../Redux\";\nimport { fetchuserLoginEvents } from \"../Redux/userLoginEventsSlice\";\n\ninterface LoginEventsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  userId: any;\n}\n\nconst LoginEventsModal: React.FC<LoginEventsModalProps> = ({\n  isOpen,\n  onClose,\n  userId,\n}) => {\n  const userDetails: any = useAppSelector(\n    (state: RootState) => state.userLoginEvent\n  );\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchuserLoginEvents(userId));\n  }, [userId]);\n\n  const userlisting = userDetails?.userLoginEvent?.userlisting || [];\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent\n        className=\"max-w-3xl overflow-hidden gap-0\"\n        style={{ minWidth: \"85%\" }}\n      >\n        <DialogHeader>\n          <DialogTitle className=\"text-lg ps-2 py-1 font-semibold text-gray-800 w-100 assign-text\">\n            Login Events\n          </DialogTitle>\n          <DialogDescription className=\"text-sm text-gray-600 ps-2\">\n            Recent login activity details are listed below.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"mt-4 w-100 overflow-auto scroll-container\">\n          {userlisting.length > 0 ? (\n            <div className=\"max-h-96 overflow-auto scroll-container border rounded-lg shadow-sm\">\n              <table className=\"w-full text-sm border-collapse border border-gray-200\">\n                <thead className=\"bg-gray-100 text-gray-700\">\n                  <tr>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Device</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Location</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Date & Time</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Location Tracking</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Device Tracking</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">False Login Attempt</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">Login Time Analysis</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold risk\">IP Repetition</th>\n                    <th className=\"px-4 py-2   bg-[#5FA7F5] text-white font-bold rounded-tr-lg risk\">Average %</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {userlisting.map((event: any) => (\n                    <tr key={event._id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {event.deviceDetails?.deviceType} -{\" \"}\n                        {event.deviceDetails?.browser} -{\" \"}\n                        {event.deviceDetails?.os}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {event.location?.city}, {event.location?.country}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {event.createdAt\n                          ? new Date(event.createdAt).toLocaleString()\n                          : \"N/A\"}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {!isNaN(event.locationTrackingMiddleware)\n                          ? Math.round(event.locationTrackingMiddleware * 100) /\n                            100\n                          : 0}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {!isNaN(event.deviceTrackingMiddleware)\n                          ? Math.round(event.deviceTrackingMiddleware * 100) /\n                            100\n                          : 0}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {!isNaN(event.falseLoginAttemptMiddleware)\n                          ? Math.round(\n                              event.falseLoginAttemptMiddleware * 100\n                            ) / 100\n                          : 0}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {!isNaN(event.loginTimeAnalysisMiddleware)\n                          ? Math.round(\n                              event.loginTimeAnalysisMiddleware * 100\n                            ) / 100\n                          : 0}\n                      </td>\n                      <td className=\"px-4 py-2 border name-h-color\">\n                        {!isNaN(event.ipRepetitionTrackingMiddleware)\n                          ? Math.round(\n                              event.ipRepetitionTrackingMiddleware * 100\n                            ) / 100\n                          : 0}\n                      </td>\n                      <td className=\"px-4 py-2 border relative name-h-color\">\n                        {!isNaN(event.averagePercentage)\n                          ? Math.round(event.averagePercentage * 100) / 100\n                          : 0}\n                        %\n                        <div className=\"w-full h-1 bg-gray-200 mt-1 relative overflow-hidden\">\n                          <div\n                            className={`h-full absolute left-0 top-0 transition-all duration-500\n                              ${\n                                event.averagePercentage <= 0 ? \"bg-green-500\" : event.averagePercentage < 50 ? \"bg-green-500\" : \"\"\n                              }\n                              ${\n                                event.averagePercentage >= 50 &&\n                                event.averagePercentage < 75\n                                  ? \"bg-yellow-500\"\n                                  : \"\"\n                              }\n                              ${\n                                event.averagePercentage >= 75\n                                  ? \"bg-red-500\"\n                                  : \"\"\n                              }`}\n                            style={{\n                              width: `${\n                                !isNaN(event.averagePercentage)\n                                  ? event.averagePercentage\n                                  : 0\n                              }%`,\n                            }}\n                          ></div>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <p className=\"text-sm text-gray-500 text-center py-4\">\n              No login events found.\n            </p>\n          )}\n        </div>\n        <DialogFooter className=\"flex justify-end mt-4\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 focus:ring-2 focus:ring-blue-500\"\n          >\n            Close\n          </button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default LoginEventsModal;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///home/rahul/Documents/lib/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"../Redux\";\nimport LoginEventsModal from \"../components/LoginEventModal\";\nimport { userDetailAsync } from \"../Redux/userSlice\";\nimport { fetchuserLoginEvents } from \"../Redux/userLoginEventsSlice\";\nimport { Info } from \"lucide-react\"; // Importing Info icon\n\nconst Dashboard: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedUserId, setSelectedUserId] = useState<string | null>(null);\n  const [infoModalData, setInfoModalData] = useState<{\n    name: string;\n    description: string;\n    location:string;\n    fleetSize:any;\n    driver_email:any\n  } | null>(null);\n\n  const userDetails: any = useAppSelector((state: RootState) => state.user);\n  const sortedUsers = Array.isArray(userDetails?.userDetails?.userlisting)\n  ? [...userDetails.userDetails.userlisting].sort(\n      (a, b) => a.riskFactor - b.riskFactor\n    )\n  : [];\n\n  useEffect(() => {\n    dispatch(userDetailAsync());\n  }, [dispatch]);\n\n  // Function to handle risk score click\n  const handleRowClick = async (userId: any) => {\n    setSelectedUserId(userId);\n    setIsModalOpen(true);\n    dispatch(fetchuserLoginEvents(userId));\n  };\n\n  // Function to handle closing risk score modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedUserId(null);\n  };\n\n  // Function to handle opening info modal\n  const handleInfoClick = (user: { name: string; description: string ,location:string, fleetSize:any, driver_email:any;\n  }) => {\n    setInfoModalData(user);\n  };\n\n  // Function to handle closing info modal\n  const handleCloseInfoModal = () => {\n    setInfoModalData(null);\n  };\n\n  return (\n    \n    <div className=\"bg-white shadow-lg rounded-lg p-6\">\n      <div className=\"flex justify-start items-start mb-4\">\n        <h1 className=\"assign-text ps-2 py-2\">Assign Carrier</h1>\n      </div>\n      <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 border border-[#F0F0F0] rounded-lg\">\n        <thead>\n          <tr>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold rounded-tl-lg risk\"\n            >\n              Name\n            </th>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold risk\"\n            >\n              Email ID\n            </th>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold risk\"\n            >\n              Contact Number\n            </th>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold risk\"\n            >\n              Country\n            </th>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold risk\"\n            >\n              State\n            </th>\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#3a65ff] text-white font-bold text-center\"\n            >\n              <h1 className=\"risk\">Risk Score</h1>\n              <h4 className=\"power-zt\">Powered by ZT Fortio</h4>\n            </th>\n\n            <th\n              scope=\"col\"\n              className=\"px-6 py-3 bg-[#5FA7F5] text-white font-bold text-center rounded-tr-lg risk\"\n            >\n              Action\n            </th>\n          </tr>\n        </thead>\n        <tbody>{\n        sortedUsers.map(\n              (user: any, index: number) => (\n                <tr\n                  key={index}\n                  className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                >\n                  <td className=\"px-6 py-2 name-h-color flex items-center justify-start mt-3 gap-2\">\n                    {user.name}\n                    {/* Info Icon */}\n                    <Info\n                      className=\"w-5 text-blue-500 cursor-pointer hover:text-blue-700\"\n                      onClick={() => handleInfoClick(user)}\n                    />\n                  </td>\n\n                  <td className=\"px-6 py-2 name-h-color\">{user.email}</td>\n                  <td className=\"px-6 py-2 name-h-color\">\n                    {user.contactNumber}\n                  </td>\n                  <td className=\"px-6 py-2 name-h-color\">{user.country}</td>\n                  <td className=\"px-6 py-2 name-h-color\">{user.state}</td>\n                  <td className=\"px-6 py-2 name-h-color bg-[#3a65ff] cursor-pointer\">\n                    <div className=\"flex items-center justify-center\">\n                      <span\n                        onClick={() => handleRowClick(user._id)}\n                        className={`\n        inline-block border-2 p-2 rounded-lg text-center w-24 py-2 font-bold text-lg \n        ${user.riskFactor < 50 ? \"border-green-500 text-green-500 bg-white\" : \"\"}\n        ${\n          user.riskFactor >= 50 && user.riskFactor < 75\n            ? \"border-yellow-500 text-yellow-500 bg-white\"\n            : \"\"\n        }\n        ${\n          user.riskFactor >= 75\n            ? \"border-red-500 text-red-500 bg-white\"\n            : \"\"\n        }\n      `}\n                        style={{\n                          borderWidth: \"3px\", // Border ko thoda mota karne ke liye\n                        }}\n                      >\n                        {Math.round(user.riskFactor * 100) / 100}%\n                      </span>\n                    </div>\n                  </td>\n\n                  <td className=\"px-6 py-2 cursor-pointer\">\n                    <button\n                      type=\"button\"\n                      className=\"border-2 border-[#4785EA] bg-[#f5f8ff] text-black font-bold py-2 px-6 rounded-lg shadow-md hover:bg-[#e3eaff] transition\"\n                    >\n                      Assign\n                    </button>\n                  </td>\n                </tr>\n              )\n            )}\n        </tbody>\n      </table>\n\n      {/* Risk Score Modal */}\n      {isModalOpen && (\n        <LoginEventsModal\n          isOpen={isModalOpen}\n          userId={selectedUserId}\n          onClose={handleCloseModal}\n        />\n      )}\n\n      {/* User Info Modal */}\n      {infoModalData && (\n<div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n  <div className=\"bg-white p-4 sm:p-6 rounded-lg shadow-lg w-full max-w-lg relative\">\n    {/* Top Section with Border Bottom */}\n    <div className=\"border-gray-300 pb-4 relative\">\n      {/* Cross Button (Top Right) */}\n      <button\n        className=\"absolute top-2 right-3 bg-blue-500 text-white rounded-full w-7 h-7 flex items-center justify-center hover:bg-blue-700\"\n        onClick={handleCloseInfoModal}\n      >\n        ✖\n      </button>\n\n      {/* Carrier Name */}\n      <h3 className=\"text-xl font-bold\">{infoModalData.name}</h3>\n\n      {/* Description */}\n      <p className=\"text-gray-700 leading-relaxed mt-2\">\n        {infoModalData.description}\n      </p>\n    </div>\n\n    {/* Fleet and Location */}\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mt-4\">\n      <div className=\"border rounded-lg p-4 shadow-md\">\n        <p className=\"text-sm text-gray-500 flex items-center\">🚚 Fleet</p>\n        <p className=\"font-bold text-xl\">{infoModalData.fleetSize}</p>\n      </div>\n      <div className=\"border rounded-lg p-4 shadow-md\">\n        <p className=\"text-sm text-gray-500 flex items-center\">📍 Location</p>\n        <p className=\"font-bold text-xl\">{infoModalData.location}</p>\n      </div>\n    </div>\n\n    {/* Driver Emails */}\n    <div className=\"border rounded-lg p-4 shadow-md mt-4\">\n      <p className=\"text-sm text-gray-500 flex items-center\">📧 Driver Emails</p>\n      <div className=\"font-bold text-blue-600 flex flex-wrap gap-2 mt-2\">\n        {infoModalData.driver_email.map((email: any, index: any) => (\n          <span key={index} className=\"whitespace-nowrap\">\n            {email} {index !== infoModalData.driver_email.length - 1 && \"|\"}\n          </span>\n        ))}\n      </div>\n    </div>\n  </div>\n</div>\n\n\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}