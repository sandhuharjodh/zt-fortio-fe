{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://D%3A/zt-new/frontend/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"./Redux\";\nimport { LoginAsync } from \"./Redux/userSlice\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useRouter } from \"next/navigation\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const router = useRouter();\n\n  const dispatch = useAppDispatch();\n  const { isLoading, error } = useAppSelector((state: RootState) => state.user);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Fetch geolocation\n    const getGeolocation = (): Promise<{ lat: number; long: number }> => {\n      return new Promise((resolve, reject) => {\n        if (!navigator.geolocation) {\n          reject(new Error(\"Geolocation is not supported by your browser.\"));\n        } else {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              const { latitude, longitude } = position.coords;\n              resolve({ lat: latitude, long: longitude });\n            },\n            (error) => reject(error),\n            { enableHighAccuracy: true }\n          );\n        }\n      });\n    };\n\n    try {\n      const { lat, long } = await getGeolocation();\n\n      const data: any = await dispatch(\n        LoginAsync({\n          email,\n          password,\n          lat,\n          long,\n        })\n      );\n\n      if (data?.payload?.message === \"Login successful.\") {\n        toast.success(data?.payload?.message);\n\n        const { token, userId } = data.payload;\n\n        if (rememberMe) {\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"userId\", userId);\n        } else {\n          sessionStorage.setItem(\"token\", token);\n          sessionStorage.setItem(\"userId\", userId);\n        }\n\n        router.push(\"/dashboard\");\n      } else {\n        toast.error(data?.payload?.message);\n      }\n    } catch (error) {\n      console.error(error, \"Error occurred during geolocation or login.\");\n      toast.error(\"Unable to retrieve your location. Please try again.\");\n    }\n  };\n\n  if (error) {\n    toast.error(error);\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-6 bg-gray-100\">\n      <div className=\"w-full max-w-4xl bg-white rounded-lg shadow-lg flex\">\n        {/* Left Side: Image */}\n        <div className=\"w-1/2 hidden md:block\">\n          <img\n            src=\"/login-image.jpg\"\n            alt=\"Login\"\n            className=\"w-full h-full object-cover rounded-l-lg\"\n          />\n        </div>\n\n        {/* Right Side: Login Form */}\n        <div className=\"w-full md:w-1/2 p-8\">\n          <h1 className=\"text-2xl text-sky-800 font-bold mb-6 text-center\">\n            Login\n          </h1>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Email Field */}\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium mb-2\">\n                Email\n              </label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setEmail(e.target.value)\n                }\n                className=\"w-full border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-sky-500 focus:outline-none\"\n              />\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium mb-2\"\n              >\n                Password\n              </label>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Enter your password\"\n                value={password}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setPassword(e.target.value)\n                }\n                className=\"w-full border border-gray-300 rounded-md p-2 focus:ring-2 focus:ring-sky-500 focus:outline-none\"\n              />\n            </div>\n\n            {/* Remember Me & Forgot Password */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Checkbox\n                  id=\"rememberMe\"\n                  checked={rememberMe}\n                  onCheckedChange={(checked: boolean) => setRememberMe(checked)}\n                />\n                <label htmlFor=\"rememberMe\" className=\"text-sm ml-2\">\n                  Remember Me\n                </label>\n              </div>\n              <a href=\"#\" className=\"text-sm text-sky-600 hover:underline\">\n                Forgot Password?\n              </a>\n            </div>\n\n            {/* Submit Button */}\n            <Button\n              type=\"submit\"\n              className={`w-full bg-sky-600 text-white font-semibold p-2 rounded-md transition-all \n          ${isLoading ? \"opacity-50 cursor-not-allowed\" : \"hover:bg-sky-700\"}`}\n              disabled={isLoading}\n            >\n              {isLoading ? \"Logging in...\" : \"Login\"}\n            </Button>\n          </form>\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}